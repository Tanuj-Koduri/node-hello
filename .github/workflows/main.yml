name: Intelligent Operations with Amazon Bedrock

# Define workflow triggers
on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]

# Prevent concurrent runs on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  review:
    runs-on: ubuntu-latest

    permissions:
      id-token: write          # For AWS OIDC authentication
      contents: write          # For accessing repository contents
      pull-requests: write     # For commenting on pull requests

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Step 3: Install required dependencies
      - name: Install Dependencies for GitHub Actions
        run: |
          npm install @actions/core @actions/github
        shell: bash

      # Step 4: Verify installation of dependencies
      - name: Verify Dependencies Installation
        run: |
          npm list @actions/core
          npm list @actions/github
        shell: bash

      # Step 5: Debug GitHub Token availability
      - name: Verify GitHub Token
        run: |
          if [ -n "${{ secrets.GITHUB_TOKEN }}" ]; then
            echo "GitHub Token is set."
          else
            echo "GitHub Token is not set."
            exit 1
          fi

      # Step 6: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      # Step 7: Run the custom Intelligent GitHub Actions
      - name: Intelligent GitHub Actions
        uses: Tanuj-Koduri/node-hello@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          aws-region: us-east-1
          model-id: anthropic.claude-3-sonnet-20240229-v1:0
          generate-code-review-exclude-files: '*.md,*.json,*.yml,*.yaml'
          generate-code-review-level: 'detailed'
          generate-code-review: 'true'
          generate-pr-description: 'true'
          generate-unit-test: 'true'
          output-language: 'en'

      # Step 8: Ensure the job does not run indefinitely
      - name: Stop Server if Running
        if: always()
        run: |
          pkill -f "node" || echo "No server process found."
        shell: bash
